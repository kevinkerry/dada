<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 服务器生产环境配置 -->
				<!-- <value>file:/var/myapp/application.server.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.youyisi.vote" />
	<!-- <context:component-scan base-package="com.concom.elasticsearch"/> -->
   <!-- <import resource="classpath:/META-INF/elasticsearch/elasticsearch-config.xml"/>-->

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.dirverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="initialPoolSize" value="10" />
		<property name="maxPoolSize" value="20" />
		<property name="minPoolSize" value="10" />
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="1000" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
	</bean><!--
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />

    <property name="filters" value="stat" />

    <property name="maxActive" value="100" />
    <property name="initialSize" value="1" />
    <property name="maxWait" value="10000" />
    <property name="minIdle" value="10" />

    <property name="timeBetweenEvictionRunsMillis" value="3000" />
    <property name="minEvictableIdleTimeMillis" value="300000" />

    <property name="validationQuery" value="SELECT 'x'" />
    <property name="testWhileIdle" value="true" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />

    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
</bean>
     -->


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:META-INF/mybatis/mybatis.xml"/>
		<property name="mapperLocations" value="classpath*:META-INF/mybatis/mappers/**/*.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- <bean id="client"  class="com.concom.index.infrastructure.persist.client.TransportClientFactoryBean">
		<property name="clusterNodes" value="${cluster.nodes}" />
		<property name="clusterName" value="${cluster.name}" />
		<property name="clientTransportSniff" value="${clientTransportSniff}" />
    </bean> -->
	<!-- <bean id="executorsSingleton" class="com.cl.index.infrastructure.pool.ExecutorsSingleton"
		lazy-init="true">
		<property name="threadNum" value="5"></property>
	</bean> -->
	
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<aop:aspectj-autoproxy />
	<import resource="classpath:/META-INF/redis/spring-redis.xml"/>
	 <bean class="com.youyisi.vote.interfaces.task.InstantiationTracingBeanPostProcessor"/>
</beans>
